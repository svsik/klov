apiVersion: v1
kind: Template
label: ${APP_NAME}
metadata:
  annotations:
    description: Template to create a Klov test executions report server
    iconClass: java
    tags: test,extent
    version: "1.0"
  name: klov-mongodb-extent

parameters:
- description: The name assigned to the application.
  displayName: Application Name
  name: APP_NAME
  required: true
  value: klov
- description: The namespace assigned to the application.
  displayName: Application Namespace
  name: APP_NAMESPACE
  required: true
  value: kamil
- description: The URL of the repository with your application source code.
  displayName: Git Repository URL
  name: GIT_REPO
  required: true
  value: https://github.com/svsik/klov.git
- description: Set this to a branch name, tag or other ref of your repository if you are not using the default branch.
  displayName: Git Reference
  name: GIT_REF
  value: master
- displayName: Custom http Route Hostname
  description: 'Custom hostname for http service route.  Leave blank for default hostname,
    e.g.: <application-name>-<project>.<default-domain-suffix>'
  name: HOSTNAME_HTTP
  value: ''
  required: false
- displayName: Database Name
  description: Database name
  name: DB_DATABASE
  value: root
  required: true
- displayName: Database Volume Capacity
  description: Size of persistent storage for database volume.
  name: VOLUME_CAPACITY
  value: "1Gi"
  required: true
- displayName: Datasource Minimum Pool Size
  description: Sets xa-pool/min-pool-size for the configured datasource.
  name: DB_MIN_POOL_SIZE
  required: false
- displayName: Datasource Maximum Pool Size
  description: Sets xa-pool/max-pool-size for the configured datasource.
  name: DB_MAX_POOL_SIZE
  required: false
- displayName: Datasource Transaction Isolation
  description: Sets transaction-isolation for the configured datasource.
  name: DB_TX_ISOLATION
  required: false
- displayName: MongoDB No Preallocation
  description: Disable data file preallocation.
  name: MONGODB_NOPREALLOC
  required: false
- displayName: MongoDB Small Files
  description: Set MongoDB to use a smaller default data file size.
  name: MONGODB_SMALLFILES
  required: false
- displayName: MongoDB Quiet
  description: Runs MongoDB in a quiet mode that attempts to limit the amount of output.
  name: MONGODB_QUIET
  required: false
- displayName: Database Username
  description: Database user name
  name: DB_USERNAME
  from: "user[a-zA-Z0-9]{3}"
  generate: expression
  required: true
- displayName: Database Password
  description: Database user password
  name: DB_PASSWORD
  from: "[a-zA-Z0-9]{8}"
  generate: expression
  required: true
- displayName: Database admin password
  description: Database admin password
  name: DB_ADMIN_PASSWORD
  from: "[a-zA-Z0-9]{8}"
  generate: expression
  required: true
- displayName: Github Webhook Secret
  description: GitHub trigger secret
  name: GITHUB_WEBHOOK_SECRET
  from: "[a-zA-Z0-9]{8}"
  generate: expression
  required: true
- displayName: Generic Webhook Secret
  description: Generic build trigger secret
  name: GENERIC_WEBHOOK_SECRET
  from: "[a-zA-Z0-9]{8}"
  generate: expression
  required: true
- displayName: MongoDB Image Stream Tag
  description: The tag to use for the "mongodb" image stream.  Typically, this aligns
    with the major.minor version of MongoDB.
  name: MONGODB_IMAGE_STREAM_TAG
  value: '3.2'
  required: true
- description: Build dir
  displayName: Build dir
  name: BUILD_DIR
  required: true
  value: target
- description: Sets maven mirror
  displayName: Maven mirror
  name: MVN_MIRROR
  required: false
  value: http://nexus-cicd-kbcdemo.52.178.132.107.nip.io/repository/all/
- description: Sets maven arguments
  displayName: Maven arguments
  name: MVN_ARGS
  required: true
  value: |-
    -Djava.net.preferIPv4Stack=true -e -Popenshift clean package

objects:

- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${APP_NAME}
    labels:
      application: ${APP_NAME}

- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: sti-builder:latest
          namespace: cicd-kbcdemo
        env:
          - name: ARTIFACT_DIR
            value: ${BUILD_DIR}
          - name: APP_SUFFIX
            value: ${APP_NAME}
          - name: MAVEN_MIRROR_URL
            value: ${MVN_MIRROR}
          - name: MAVEN_ARGS
            value: ${MVN_ARGS}
        incremental: true
        namespace: ${APP_NAMESPACE}
    successfulBuildsHistoryLimit: 5
    source:
      git:
        ref: ${GIT_REF}
        uri: ${GIT_REPO}
      type: Git
    triggers:
    - github:
        secret: mzvDbyXYMPqDm3J6QWvR
      type: GitHub
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Recreate
    template:
      metadata:
        labels:
          app: ${APP_NAME}
          deploymentconfig: ${APP_NAME}
      spec:
        containers:
        - env:
          - name: DB_SERVICE_PREFIX_MAPPING
            value: ${APP_NAME}-mongodb=DB
          - name: DB_USERNAME
            value: ${DB_USERNAME}
          - name: DB_PASSWORD
            value: ${DB_PASSWORD}
          - name: DB_DATABASE
            value: ${DB_DATABASE}
          - name: DB_ADMIN_PASSWORD
            value: ${DB_ADMIN_PASSWORD}
          - name: DB_MIN_POOL_SIZE
            value: ${DB_MIN_POOL_SIZE}
          - name: DB_MAX_POOL_SIZE
            value: ${DB_MAX_POOL_SIZE}
          - name: DB_TX_ISOLATION
            value: ${DB_TX_ISOLATION}
          image: ' '
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 180
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: ${APP_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - type: ConfigChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: ${APP_NAME}-mongodb
    labels:
      application: ${APP_NAME}
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}-mongodb
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: mongodb:openshift
    - type: ConfigChange
    replicas: 1
    selector:
      deploymentConfig: ${APP_NAME}-mongodb
    template:
      metadata:
        name: ${APP_NAME}-mongodb
        labels:
          deploymentConfig: ${APP_NAME}-mongodb
          application: ${APP_NAME}
      spec:
        terminationGracePeriodSeconds: 60
        containers:
        - name: ${APP_NAME}-mongodb
          image: mongodb
          imagePullPolicy: Always
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 3
            exec:
              command:
              - "/bin/sh"
              - "-i"
              - "-c"
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
          livenessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 30
            tcpSocket:
              port: 27017
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: ${APP_NAME}-mongodb-pvol
          env:
          - name: MONGODB_USER
            value: ${DB_USERNAME}
          - name: MONGODB_PASSWORD
            value: ${DB_PASSWORD}
          - name: MONGODB_DATABASE
            value: ${DB_DATABASE}
          - name: MONGODB_ADMIN_PASSWORD
            value: ${DB_ADMIN_PASSWORD}
          - name: MONGODB_NOPREALLOC
            value: ${MONGODB_NOPREALLOC}
          - name: MONGODB_SMALLFILES
            value: ${MONGODB_SMALLFILES}
          - name: MONGODB_QUIET
            value: ${MONGODB_QUIET}
        volumes:
        - name: ${APP_NAME}-mongodb-pvol
          persistentVolumeClaim:
            claimName: ${APP_NAME}-mongodb-claim

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APP_NAME}
    name: ${APP_NAME}
  annotations:
    description: ${APP_NAME} http port
    service.alpha.openshift.io/dependencies: '[{"name": "${APP_NAME}-mongodb", "kind": "Service"}]'
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APP_NAME}
      deploymentconfig: ${APP_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- kind: Service
  apiVersion: v1
  spec:
    ports:
    - port: 27017
      targetPort: 27017
    selector:
      deploymentConfig: ${APP_NAME}-mongodb
  metadata:
    name: ${APP_NAME}-mongodb
    labels:
      application: ${APP_NAME}
    annotations:
      description: The database server's port.

- kind: Route
  apiVersion: v1
  id: ${APP_NAME}-http
  metadata:
    name: ${APP_NAME}
    labels:
      application: ${APP_NAME}
    annotations:
      description: Route for ${APP_NAME}'s http service.
  spec:
    host: ${HOSTNAME_HTTP}
    to:
      name: ${APP_NAME}

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${APP_NAME}-mongodb-claim
    labels:
      application: ${APP_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}